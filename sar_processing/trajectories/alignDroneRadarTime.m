function [tx_enu, rx_enu, yaw] = alignDroneRadarTime(POSE, targets, tau_ax, radar_parameters)
%ALIGNDRONERADARTIME align drone and radar time, return ENU trajectory
%   return ENU trajectory of TX and RX, ready for bistatic case
[uniqueEpoch,uniqIdx] = unique(POSE.epoch);
avgSpan = 1e3;
rx_enu = vertcat(...
    movmean(medfilt1(interp1(uniqueEpoch,POSE.RX(uniqIdx,1), tau_ax, "linear"),2*avgSpan),avgSpan), ...
    movmean(medfilt1(interp1(uniqueEpoch,POSE.RX(uniqIdx,2), tau_ax, "linear"),2*avgSpan),avgSpan), ...
    movmean(medfilt1(interp1(uniqueEpoch,POSE.RX(uniqIdx,3), tau_ax, "linear"),2*avgSpan),avgSpan) ...
    ).';



tx_enu = vertcat(...
    movmean(medfilt1(interp1(uniqueEpoch,POSE.TX(uniqIdx,1), tau_ax, "linear"),2*avgSpan),avgSpan), ...
    movmean(medfilt1(interp1(uniqueEpoch,POSE.TX(uniqIdx,2), tau_ax, "linear"),2*avgSpan),avgSpan), ...
    movmean(medfilt1(interp1(uniqueEpoch,POSE.TX(uniqIdx,3), tau_ax, "linear"),2*avgSpan),avgSpan) ...
    ).';
yaw = movmean(medfilt1(interp1(uniqueEpoch,POSE.yaw(uniqIdx), tau_ax, "linear"),2*avgSpan),avgSpan);
end

